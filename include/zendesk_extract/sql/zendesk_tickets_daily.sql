drop table if exists {{ params.schema_name }}.{{ params.table_name }};
create table if not exists {{ params.schema_name }}.{{ params.table_name }} like {{ params.schema_name }}.zendesk_tickets;
copy into {{ params.schema_name }}.{{ params.table_name }} FROM 's3://airflow-success/zendesk_extract/tickets/{{ds}}/tickets.csv'
credentials = (aws_key_id='{{ conn.my_conn_s3.extra_dejson.aws_access_key_id }}' aws_secret_key='{{ conn.my_conn_s3.extra_dejson.aws_secret_access_key }}')
file_format = (type = csv, record_delimiter= '\n' field_delimiter=',' field_optionally_enclosed_by='"' skip_header=1)
;

merge into {{ params.schema_name }}.zendesk_tickets using {{ params.schema_name }}.{{ params.table_name }}
  on zendesk_tickets.id = {{ params.table_name }}.id
  when matched then update set
    zendesk_tickets.url = {{ params.table_name }}.url,
    zendesk_tickets.external_id = {{ params.table_name }}.external_id,
    zendesk_tickets.created_at = {{ params.table_name }}.created_at,
    zendesk_tickets.updated_at = {{ params.table_name }}.updated_at,
    zendesk_tickets.type = {{ params.table_name }}.type,
    zendesk_tickets.subject = {{ params.table_name }}.subject,
    zendesk_tickets.raw_subject = {{ params.table_name }}.raw_subject,
    zendesk_tickets.description = {{ params.table_name }}.description,
    zendesk_tickets.priority = {{ params.table_name }}.priority,
    zendesk_tickets.status = {{ params.table_name }}.status,
    zendesk_tickets.recipient = {{ params.table_name }}.recipient,
    zendesk_tickets.requester_id = {{ params.table_name }}.requester_id,
    zendesk_tickets.submitter_id = {{ params.table_name }}.submitter_id,
    zendesk_tickets.assignee_id = {{ params.table_name }}.assignee_id,
    zendesk_tickets.organization_id = {{ params.table_name }}.organization_id,
    zendesk_tickets.group_id = {{ params.table_name }}.group_id,
    zendesk_tickets.collaborator_ids = {{ params.table_name }}.collaborator_ids,
    zendesk_tickets.follower_ids = {{ params.table_name }}.follower_ids,
    zendesk_tickets.email_cc_ids = {{ params.table_name }}.email_cc_ids,
    zendesk_tickets.forum_topic_id = {{ params.table_name }}.forum_topic_id,
    zendesk_tickets.problem_id = {{ params.table_name }}.problem_id,
    zendesk_tickets.has_incidents = {{ params.table_name }}.has_incidents,
    zendesk_tickets.is_public = {{ params.table_name }}.is_public,
    zendesk_tickets.due_at = {{ params.table_name }}.due_at,
    zendesk_tickets.tags = {{ params.table_name }}.tags,
    zendesk_tickets.custom_fields = {{ params.table_name }}.custom_fields,
    zendesk_tickets.sharing_agreement_ids = {{ params.table_name }}.sharing_agreement_ids,
    zendesk_tickets.fields = {{ params.table_name }}.fields,
    zendesk_tickets.followup_ids = {{ params.table_name }}.followup_ids,
    zendesk_tickets.ticket_form_id = {{ params.table_name }}.ticket_form_id,
    zendesk_tickets.brand_id = {{ params.table_name }}.brand_id,
    zendesk_tickets.allow_channelback = {{ params.table_name }}.allow_channelback,
    zendesk_tickets.allow_attachments = {{ params.table_name }}.allow_attachments,
    zendesk_tickets.generated_timestamp = {{ params.table_name }}.generated_timestamp,
    zendesk_tickets."via.channel" = {{ params.table_name }}."via.channel",
    zendesk_tickets."via.source.rel" = {{ params.table_name }}."via.source.rel",
    zendesk_tickets."satisfaction_rating.score" = {{ params.table_name }}."satisfaction_rating.score",
    zendesk_tickets."via.source.from.address" = {{ params.table_name }}."via.source.from.address",
    zendesk_tickets."via.source.from.name" = {{ params.table_name }}."via.source.from.name",
    zendesk_tickets."via.source.to.name" = {{ params.table_name }}."via.source.to.name",
    zendesk_tickets."via.source.to.address" = {{ params.table_name }}."via.source.to.address",
    zendesk_tickets."via.source.from.ticket_id" = {{ params.table_name }}."via.source.from.ticket_id",
    zendesk_tickets."via.source.from.subject" = {{ params.table_name }}."via.source.from.subject",
    zendesk_tickets."via.source.from.channel" = {{ params.table_name }}."via.source.from.channel",
    zendesk_tickets."satisfaction_rating.id" = {{ params.table_name }}."satisfaction_rating.id",
    zendesk_tickets."satisfaction_rating.comment" = {{ params.table_name }}."satisfaction_rating.comment",
    zendesk_tickets."satisfaction_rating.reason" = {{ params.table_name }}."satisfaction_rating.reason",
    zendesk_tickets."satisfaction_rating.reason_id" = {{ params.table_name }}."satisfaction_rating.reason_id"
  when not matched then insert (
    url,
    id,
    external_id,
    created_at,
    updated_at,
    type,
    subject,
    raw_subject,
    description,
    priority,
    status,
    recipient,
    requester_id,
    submitter_id,
    assignee_id,
    organization_id,
    group_id,
    collaborator_ids,
    follower_ids,
    email_cc_ids,
    forum_topic_id,
    problem_id,
    has_incidents,
    is_public,
    due_at,
    tags,
    custom_fields,
    sharing_agreement_ids,
    fields,
    followup_ids,
    ticket_form_id,
    brand_id,
    allow_channelback,
    allow_attachments,
    generated_timestamp,
    "via.channel",
    "via.source.rel",
    "satisfaction_rating.score",
    "via.source.from.address",
    "via.source.from.name",
    "via.source.to.name",
    "via.source.to.address",
    "via.source.from.ticket_id",
    "via.source.from.subject",
    "via.source.from.channel",
    "satisfaction_rating.id",
    "satisfaction_rating.comment",
    "satisfaction_rating.reason",
    "satisfaction_rating.reason_id"
  ) values (
    {{ params.table_name }}.url,
    {{ params.table_name }}.id,
    {{ params.table_name }}.external_id,
    {{ params.table_name }}.created_at,
    {{ params.table_name }}.updated_at,
    {{ params.table_name }}.type,
    {{ params.table_name }}.subject,
    {{ params.table_name }}.raw_subject,
    {{ params.table_name }}.description,
    {{ params.table_name }}.priority,
    {{ params.table_name }}.status,
    {{ params.table_name }}.recipient,
    {{ params.table_name }}.requester_id,
    {{ params.table_name }}.submitter_id,
    {{ params.table_name }}.assignee_id,
    {{ params.table_name }}.organization_id,
    {{ params.table_name }}.group_id,
    {{ params.table_name }}.collaborator_ids,
    {{ params.table_name }}.follower_ids,
    {{ params.table_name }}.email_cc_ids,
    {{ params.table_name }}.forum_topic_id,
    {{ params.table_name }}.problem_id,
    {{ params.table_name }}.has_incidents,
    {{ params.table_name }}.is_public,
    {{ params.table_name }}.due_at,
    {{ params.table_name }}.tags,
    {{ params.table_name }}.custom_fields,
    {{ params.table_name }}.sharing_agreement_ids,
    {{ params.table_name }}.fields,
    {{ params.table_name }}.followup_ids,
    {{ params.table_name }}.ticket_form_id,
    {{ params.table_name }}.brand_id,
    {{ params.table_name }}.allow_channelback,
    {{ params.table_name }}.allow_attachments,
    {{ params.table_name }}.generated_timestamp,
    {{ params.table_name }}."via.channel",
    {{ params.table_name }}."via.source.rel",
    {{ params.table_name }}."satisfaction_rating.score",
    {{ params.table_name }}."via.source.from.address",
    {{ params.table_name }}."via.source.from.name",
    {{ params.table_name }}."via.source.to.name",
    {{ params.table_name }}."via.source.to.address",
    {{ params.table_name }}."via.source.from.ticket_id",
    {{ params.table_name }}."via.source.from.subject",
    {{ params.table_name }}."via.source.from.channel",
    {{ params.table_name }}."satisfaction_rating.id",
    {{ params.table_name }}."satisfaction_rating.comment",
    {{ params.table_name }}."satisfaction_rating.reason",
    {{ params.table_name }}."satisfaction_rating.reason_id"
  )
;
